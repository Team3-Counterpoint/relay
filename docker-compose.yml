version: '3'

services:
  ##################
  # postgrest-demo #
  ##################
  # postgrest-demo:
  #   container_name: postgrest-demo
  #   image: nginx:mainline-alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     # anything in html directory is hosted via nginx
  #     - "./html:/usr/share/nginx/html"
  #   restart: always
  postgrest:
    container_name: postgrest
    image: postgrest/postgrest:latest
    ports:
      - "3000:3000"
    # Available environment variables documented here:
    # https://postgrest.org/en/latest/configuration.html#environment-variables
    environment:
      # The standard connection URI format, documented at
      # https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING
      - PGRST_DB_URI=postgres://authenticator:mysecretpassword@db:5432/postgres
      # The name of which database schema to expose to REST clients
      - PGRST_DB_SCHEMA=api
      # The database role to use when no client authentication is provided
      - PGRST_DB_ANON_ROLE=web_anon
      # Overrides the base URL used within the OpenAPI self-documentation hosted at the API root path
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://localhost:3000
    networks:
      - postgrest-backend
    restart: always
  frontend: 
    container_name: db-admin
    build: client
    ports: 
      - "5173:5173"
    volumes: 
      - ./client:/client
  server: 
    build: server
    ports:
      - "5175:5175"
    environment: 
      PORT: "5175"
      DATABASE_URL: postgresql://postgres:postgres@db:5432/postgres
    volumes:
    - ./server:/server
  # wss: 
  #   build: wsserver
  #   ports: 
  #     - "8080:8080"
  #   environment:
  #     PG_USER: postgres
  #     PG_PASSWORD: postgres
  #     PG_HOST: db
  #     PG_PORT: "5432"
  #     PG_DATABASE: postgres
  #   volumes: 
  #     - ./wsserver:/wss
  db: 
    container_name: postgres
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=authenticator
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=postgres
      - DB_ANON_ROLE=web_anon
      - DB_SCHEMA=api
    volumes: 
      - db:/var/lib/postgresql/data
    networks:
      - postgrest-backend
volumes: 
  db: 
    driver: local
networks:
  postgrest-backend:
    driver: bridge